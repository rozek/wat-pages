[{"Name":"@de.rozek.PageSwitcher","hasBackground":false,"activeScript":"/**** openPageSwitcher ****/\n\n  function openPageSwitcher () {\n    closePageSwitcher()\n\n    my.Applet.openDialog({\n      Name:my.Name, x:0, y:-30-15,\n      SourceWidget:`${my.Name}/Contents`,\n      asAppletOverlay:true, fromRight:false, fromBottom:true,\n    })\n  }\n\n/**** closePageSwitcher ****/\n\n  function closePageSwitcher () {\n    my.Applet.closeDialog(my.Name)\n  }\n\n/**** _PageIsManagedByPageSwitcher ****/\n\n  function _PageIsManagedByPageSwitcher (Page) {\n    const PageSwitcherIsShownOnPage = my.Applet.PageSwitcherIsShownOnPage\n    if (typeof PageSwitcherIsShownOnPage === 'function') {\n      return PageSwitcherIsShownOnPage(Page)\n    } else {\n      return _PageSwitcherIsShownOnPage(Page)\n    }\n  }\n\n/**** _PageSwitcherIsShownOnPage ****/\n\n  function _PageSwitcherIsShownOnPage (Page) {\n    return (Page.Name !== my.Name)        // this is the simplest implementation\n//  return (Page.Name == null) || ! Page.Name.startsWith('@')  // this is common\n  }\n\n/**** _accessiblePages - used internally by PageSwitcher Controls ****/\n\n  WAT.Object_assign(me,{\n    get _accessiblePages () {\n      const PageFilter = (\n        typeof my.Applet.PageIsManagedByPageSwitcher === 'function'\n        ? my.Applet.PageIsManagedByPageSwitcher\n        : _PageIsManagedByPageSwitcher\n      )\n      return my.Applet.PageList.filter(PageFilter)\n    },\n    set _accessiblePages (_) { WAT.throwReadOnlyError('_accessiblePages') },\n\n    _PageIsManagedByPageSwitcher,                            // internal default\n    _PageSwitcherIsShownOnPage,                                          // dto.\n\n    openPageSwitcher,\n    closePageSwitcher,\n  })\n\n/**** show PageSwitcher after mounting this page ****/\n\n  onReady(() => {\n    openPageSwitcher()\n  })\n\n","WidgetList":[{"Behavior":"basic_controls.MarkdownView","hasBackground":false,"memoized":{"Value":"## Installation ##\n\nSimply import this page into your applet and the \"Page Switcher\" will be shown on all your pages - except this one.\n\n## Configuration (from within Applet Script) ##\n\nIf you do not want every page to be accessible by the \"Page Switcher\", use the applet script to provide a navigation filter function like:\n\n```javascript\nmy.PageIsManagedByPageSwitcher = function (Page) {\n  return (Page.Name == null) || ! Page.Name.startsWith('@')\n}\n```\n\nIf you do not want the \"Page Switcher\" to appear on every page, use the applet script to provide a visibility filter function similar to:\n\n```javascript\nmy.PageSwitcherIsShownOnPage = function (Page) {\n  return (Page.Name !== '@de.rozek.PageSwitcher')\n}\n```\n\nOften, both functions are equivalent - in that case, it is sufficient to provide \"PageSwitcherIsShownOnPage\" only."},"Offsets":[280,500,60,510]},{"Behavior":"de.rozek.TitleView","hasBackground":false,"pendingScript":"","memoized":{"Value":"Page Switcher"},"Offsets":[20,170,20,30]},{"Behavior":"basic_controls.plain_Widget","hasBackground":false,"BorderWidths":[0,0,0,1],"BorderStyles":["none","none","none","solid"],"memoized":{"visiblePattern":false},"Offsets":[270,5,60,510]},{"Behavior":"basic_controls.TextView","hasBackground":false,"BoxShadow":{"isActive":false,"xOffset":0,"yOffset":0,"BlurRadius":5,"SpreadRadius":0,"Color":"black"},"memoized":{"readonly":true,"Value":"This is a simple applet overlay that may be used to navigate between the pages of an applet.\n\nUse the left button to jump backward and the right button to jump forward in the list of applet pages.\n\nAnd use the menu button in the middle to directly navigate to a specific applet page.\n\nNota bene: right now, Pages should either have no name or unique names in order to be accessible through the menu."},"Offsets":[20,240,130,340]},{"Behavior":"basic_controls.Icon","Name":"NextPageButton","hasBackground":false,"activeScript":"/**** Renderer ****/\n\n  let Renderer = my.Renderer\n  onRender(() => {\n    const accessiblePages   = my.Page._accessiblePages\n    const accessedPageIndex = accessiblePages.indexOf(my.Applet.visitedPage)\n\n    my.Enabling = (accessedPageIndex >= 0) && (accessedPageIndex < accessiblePages.length-1)\n    return Renderer()\n  })\n\n/**** on 'click' ****/\n\n  on('click',() => {\n    const accessiblePages   = my.Page._accessiblePages\n    const accessedPageIndex = accessiblePages.indexOf(my.Applet.visitedPage)\n\n    if ((accessedPageIndex >= 0) && (accessedPageIndex < accessiblePages.length-1)) {\n      my.Applet.visitPage(accessiblePages[accessedPageIndex+1])\n    }\n  })","memoized":{"Icon":"icons/chevron-right.png"},"Enabling":false,"Offsets":[76,24,73,24]},{"Behavior":"native_controls.PseudoDropDown","Name":"PageChoice","hasBackground":false,"activeScript":"/**** Renderer ****/\n\n  let Renderer = my.Renderer\n  onRender(() => {\n    const accessiblePages   = my.Page._accessiblePages\n    const accessedPageIndex = accessiblePages.indexOf(my.Applet.visitedPage)\n\n    my.Options = accessiblePages.map((Page,i) => {\n      const PageName = Page.Name\n      if (PageName == null) {\n        return '#' + i\n      } else {\n        return PageName.replace(/:.*$/,'') + ':' + PageName\n      }\n    })\n\n    my.Enabling = (accessiblePages.length > 0)\n    my.Value    = my.Page.Name.replace(/:.*$/,'') + ':' + my.Page.Name\n\n    return Renderer()\n  })\n\n/**** on 'input' ****/\n\n  on('input',(Event) => {\n    const accessiblePages   = my.Page._accessiblePages\n    const selectedPageIndex = Event.target.selectedIndex\n    const accessedPage      = my.Page._accessiblePages[selectedPageIndex] ||\n                              my.Page._accessiblePages[0]\n\n    if (accessedPage != null) {\n      my.Applet.visitPage(accessedPage)\n    }\n  })","memoized":{"Icon":"icons/menu.png","Options":["MainPage:MainPage","GDI Aufgabe 1:GDI Aufgabe 1"],"Value":"@de.rozek.PageSwitcher:@de.rozek.PageSwitcher"},"Offsets":[48,24,73,24]},{"Behavior":"basic_controls.Icon","Name":"PrevPageButton","hasBackground":false,"activeScript":"/**** Renderer ****/\n\n  let Renderer = my.Renderer\n  onRender(() => {\n    const accessiblePages   = my.Page._accessiblePages\n    const accessedPageIndex = accessiblePages.indexOf(my.Applet.visitedPage)\n\n    my.Enabling = (accessedPageIndex > 0)\n    return Renderer()\n  })\n\n/**** on 'click' ****/\n\n  on('click',() => {\n    const accessiblePages   = my.Page._accessiblePages\n    const accessedPageIndex = accessiblePages.indexOf(my.Applet.visitedPage)\n\n    if (accessedPageIndex > 0) {\n      my.Applet.visitPage(accessiblePages[accessedPageIndex-1])\n    }\n  })","memoized":{"Icon":"icons/chevron-left.png"},"Enabling":false,"Offsets":[20,24,73,24]},{"Behavior":"basic_controls.plain_Widget","Name":"Frame","hasBackground":true,"BorderWidths":[1,1,1,1],"BorderStyles":["solid","solid","solid","solid"],"BorderColors":["#c0c0c0","#c0c0c0","#c0c0c0","#c0c0c0"],"BorderRadii":[15,15,15,15],"BoxShadow":{"isActive":true,"xOffset":0,"yOffset":0,"BlurRadius":10,"SpreadRadius":0,"Color":"#c0c0c0"},"activeScript":"","memoized":{"visiblePattern":false},"Offsets":[20,80,70,30]},{"Behavior":"basic_controls.Outline","Name":"Contents","hasBackground":false,"activeScript":"/**** on visibility-request ****/\n\n  on('visibility-request',() => {\n    const PageSwitcherIsShownOnPage = my.Applet.PageSwitcherIsShownOnPage\n    if (typeof PageSwitcherIsShownOnPage === 'function') {\n      return PageSwitcherIsShownOnPage(my.Applet.visitedPage)\n    } else {\n      return my.Page._PageSwitcherIsShownOnPage(my.Applet.visitedPage)\n    }\n  })","Offsets":[20,80,70,30]}]}]